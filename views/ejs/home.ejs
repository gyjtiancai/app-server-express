<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>葛宇杰的个人网站</title>
    <link rel="icon" href="images/favicon.ico" />
    <link type="text/css" rel="stylesheet" href="stylesheets/reset.css">
    <link type="text/css" rel="stylesheet" href="stylesheets/header.css">
    <link type="text/css" rel="stylesheet" href="stylesheets/home.css">
</head>

<body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root">

    </div>
    <canvas id="hello-canvas" height="930" width="1920">你的浏览器不支持canvas</canvas>
    <style>
        #root {
            height: 100%;
            width: 100%;
            min-width: 800px;
            position: fixed;
        }

        #hello-canvas {
            position: absolute;
            z-index: -1;
            top: 0;
        }
    </style>
    <script src="javascripts/utils/language.js"></script>
    <script src="javascripts/canvas.js"></script>
    <script src="javascripts/header.js"></script>
    <script src="javascripts/calendar.js"></script>
    <script>
        const MonthEnmu = {
            1: 'January',
            2: 'February',
            3: 'March',
            4: 'April',
            5: 'May',
            6: 'June',
            7: 'July',
            8: 'August',
            9: 'September',
            10: 'October',
            11: 'November',
            12: 'December',
        }
        const notes = [
            { id: 1, title: 'React JS', image: 'images/react.png', ENdescription: 'Content to be filled。。。', CNdescription: '内容待填充。。。', createTime: Date.now() },
            { id: 2, title: 'Vue JS', image: 'images/vue.png', ENdescription: 'Content to be filled。。。', CNdescription: '内容待填充。。。', createTime: Date.now() },
            { id: 3, title: 'Node JS', image: 'images/node.png', ENdescription: 'Content to be filled。。。', CNdescription: '内容待填充。。。', createTime: Date.now() }
        ]
        const CalendarJs = new Calendar()
        const years = new Array(81).fill(0).map((y, index) => 1970 + index)
        const months = new Array(12).fill(0).map((m, index) => 1 + index)
        const [year_now, month_now, day_now] = [new Date().getFullYear(), new Date().getMonth() + 1, new Date().getDate()]
        let currentCalendarDate = changeCalendarData(CalendarJs.getCalendarData(year_now, month_now));
        function isToday(cell) {
            return cell.id === `${year_now}/${month_now}/${day_now}`
        }
        function isCurrentMonth(cell) {
            return cell.year === year_now && cell.month === month_now
        }
        function changeCalendarData(calendarData) {
            const _calendarData = [];
            calendarData.forEach((row, index) => {
                if (index === 0) {
                    row = row.map((day) => {
                        let year = year_now;
                        let month = month_now;
                        if (day > 7) {
                            if (month === 1) {
                                year--;
                                month = 12;
                            } else {
                                month--;
                            }
                        }
                        return {
                            id: `${year}/${month}/${day}`,
                            year: year,
                            month: month,
                            day: day,
                        };
                    });
                } else if (index === 4) {
                    row = row.map((day) => {
                        let year = year_now;
                        let month = month_now;
                        if (day < 8) {
                            if (month === 12) {
                                year++;
                                month = 1;
                            } else {
                                month++;
                            }
                        }
                        return {
                            id: `${year}/${month}/${day}`,
                            year: year,
                            month: month,
                            day: day,
                        };
                    });
                } else if (index === 5) {
                    row = row.map((day) => {
                        let year = year_now;
                        let month = month_now;
                        if (day < 15) {
                            if (month === 12) {
                                year++;
                                month = 1;
                            } else {
                                month++;
                            }
                        }
                        return {
                            id: `${year}/${month}/${day}`,
                            year: year,
                            month: month,
                            day: day,
                        };
                    });
                } else {
                    row = row.map((day) => {
                        let year = year_now;
                        let month = month_now;
                        return {
                            id: `${year}/${month}/${day}`,
                            year: year,
                            month: month,
                            day: day,
                        };
                    });
                }
                _calendarData.push(row);
            });
            return _calendarData;
        }
        const Container = document.createElement('div')
        Container.setAttribute('class', 'app-home')
        const Html = `<div class="app-home-title">${language === 'CN' ? '个人笔记' : 'personal notes'}</div>
            <div class="app-home-notes">
                <div class="calendar">
                    <div class="calendar-header">
                        ${language === 'CN' ? `<div>${year_now}年${month_now}月</div>` : `<div>${MonthEnmu[month_now]} ${year_now}</div>`}
                    </div>
                    <div class="calendar-table">
                        <div class="calendar-table-header">
                            <div class="header-cell">${language === 'CN' ? '一' : 'Mon'}</div>
                            <div class="header-cell">${language === 'CN' ? '二' : 'Tue'}</div>
                            <div class="header-cell">${language === 'CN' ? '三' : 'Wed'}</div>
                            <div class="header-cell">${language === 'CN' ? '四' : 'Thu'}</div>
                            <div class="header-cell">${language === 'CN' ? '五' : 'Fri'}</div>
                            <div class="header-cell">${language === 'CN' ? '六' : 'Sat'}</div>
                            <div class="header-cell">${language === 'CN' ? '日' : 'Sun'}</div>
                        </div>
                        <div class="calendar-table-body">
                            ${currentCalendarDate.map((row, index) => `<div class="calendar-table-row" key=${index}>
                                ${row.map(cell => `<div class="row-cell ${isToday(cell) ? 'is-today' : ''} ${isCurrentMonth(cell) ? '' : 'is-not-current-month'}" key=${cell.id}>${cell.day}</div>`).join("")}
                            </div>`).join("")}
                        </div>
                    </div>
                </div>
                <div class="notes-container">
                    ${notes.map((note) => {
                        return (`<div class="note-option" key=${note.id}>
                                        <img class="note-option-image" src=${note.image} alt="" />
                                        <div class="note-option-introduction">
                                            <div class="introduction-title">${note.title}<div class="good-icon"><img src="images/good.png" /></div></div>
                                            <div class="introduction-description">${language === 'CN' ? note.CNdescription : note.ENdescription}</div>
                                        </div>
                                    </div>`)
                    }).join("")}
                </div>
            </div>`
        Container.innerHTML = Html
        document.getElementById('root').appendChild(Container)
    </script>
</body>

</html>